require "cs2lua__namespaces"; 

Startup = {
	-------------------------------
	-------- class methods --------
	-------------------------------
	__new_object = function(...)
		local __cs2dsl_newobj;
		__cs2dsl_newobj = newobject(Startup, nil, nil, "ctor", 0, nil, ...);
		return __cs2dsl_newobj;
	end,

	cctor = function()
		Startup.__cctor();
	end,

	__cctor = function()
		if Startup.__cctor_called then 
			return;
		else
			Startup.__cctor_called = true;
		end;
	end,

	-------------------------------
	-------- class fields --------
	-------------------------------
	__cctor_called = false,

	-------------------------------
	------ instance methods -------
	-------------------------------
	Init = function(this, obj, behaviour)
		HandlerRegister.Register();
		SkillTriggerRegister.Register();
		StoryRegister.Register();
		behaviour:StartCoroutine(Startup.Tick(this));
	end,

	Call = function(this, name, ...)
		local args;
		args = wrapparams({...}, System.Object, TypeKind.Class);
		HandlerRegister.Call(name, luaunpack(args));
	end,

	Tick = wrapenumerable(function(this)
		local __method_ret_18_4_23_5;
		wrapyield(newexternobject(UnityEngine.WaitForSeconds, nil, nil, "ctor", 0, nil, 10.00000000), false, true);
		UnityEngine.Debug.Log__Object(luastrtocsstr("tick after start 10 seconds."));
		wrapyield(nil, false, false);
		return nil;
	end),

	ctor = function(this)
		Startup.__ctor(this);
	end,

	__ctor = function(this)
		if this.__ctor_called then 
			return;
		else
			this.__ctor_called = true;
		end;
	end,
	-------------------------------
	------ instance fields -------
	-------------------------------
	__init_obj_fields = function(this)
		rawset(this, "__ctor_called", false);
	end,

	-------------------------------
	--- define class and object ---
	-------------------------------
	__define_class = function()
		Utility.Warn("Startup::__define_class begin");

		local class = Startup;
		local obj_methods = {
			Init = rawget(class, "Init"),
			Call = rawget(class, "Call"),
			Tick = rawget(class, "Tick"),
			ctor = rawget(class, "ctor"),
			__ctor = rawget(class, "__ctor"),
		};
		local tmp_obj_method = nil;

		local __defineclass_return = defineclass(nil, "Startup", "Startup", class, obj_methods, false, false);
		Utility.Warn("Startup::__define_class end");
		return __defineclass_return;
	end,

	-------------------------------
	--------- fields info ---------
	-------------------------------
	__class_fields = {
		__cctor_called = true,
	},

	__obj_fields = {
		__ctor_called = true,
	},

	-------------------------------
	-------- metadata info --------
	-------------------------------
	__interfaces = {
		"IStartupPlugin",
	},
	__method_info = {
		Tick = {
			private = true,
		},
		ctor = {
			ctor = true,
		},
	},
};


require "cs2lua__syslib";
require "cs2lua__externenums";
require "cs2lua__interfaces";
require "handlerregister";
require "skilltriggerregister";
require "storyregister";
settempmetatable(Startup);
