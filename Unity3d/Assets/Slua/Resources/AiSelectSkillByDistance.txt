require "cs2lua__namespaces"; 

AiSelectSkillByDistance = {
	-------------------------------
	-------- class methods --------
	-------------------------------
	__new_object = function(...)
		local __cs2dsl_newobj;
		__cs2dsl_newobj = newobject(AiSelectSkillByDistance, nil, nil, "ctor", 0, nil, ...);
		return __cs2dsl_newobj;
	end,

	cctor = function()
		AiSelectSkillByDistance.__cctor();
	end,

	__cctor = function()
		if AiSelectSkillByDistance.__cctor_called then 
			return;
		else
			AiSelectSkillByDistance.__cctor_called = true;
		end;
	end,

	-------------------------------
	-------- class fields --------
	-------------------------------
	__cctor_called = false,

	-------------------------------
	------ instance methods -------
	-------------------------------
	SetProxy = function(this, result)
		this.m_Proxy = result;
	end,

	Clone = function(this)
		local __method_ret_17_4_20_5;
		__method_ret_17_4_20_5 = newobject(AiSelectSkillByDistance, nil, nil, "ctor", 0, nil);
		return __method_ret_17_4_20_5;
	end,

	Evaluate = function(this, instance, handler, _params)
		local __cs2lua_func_info = luainitialize();
		luapcall(AiSelectSkillByDistance.__ori_Evaluate, this, __cs2lua_func_info, instance, handler, _params);
		__cs2lua_func_info = luafinalize(__cs2lua_func_info);
	end,
	__ori_Evaluate = function(this, __cs2lua_func_info, instance, handler, _params)
		local args;
		args = _params.Values;
		local objId;
		objId = invokeexternoperator(System.Int32, BoxedValue, "op_Implicit__Int32__BoxedValue", boxedvalue_list_get(__cs2lua_func_info, args, 1, 0));
		local npc;
		npc = GameFramework.PluginFramework.Instance:GetEntityById(objId);
		if (not isequal(nil, npc)) then 
			local targetId;
			targetId = npc:GetAiStateInfo().Target;
			if (targetId > 0) then 
				local target;
				target = GameFramework.PluginFramework.Instance:GetEntityById(targetId);
				if (not isequal(nil, target)) then 
					local distToTarget;
					distToTarget = GameFramework.Geometry.Distance__Vector3__Vector3(callexterninstancereturnstruct(npc:GetMovementStateInfo(), GameFramework.MovementStateInfo, "GetPosition3D"), callexterninstancereturnstruct(target:GetMovementStateInfo(), GameFramework.MovementStateInfo, "GetPosition3D"));
					local maxSkillInfo;
					maxSkillInfo = nil;
					local diffDist;
					diffDist = 340282300000000000000000000000000000000.00000000;
					local targetSkillInfo;
					targetSkillInfo = nil;
					local i;
					i = 0;
					while (i < npc.AutoSkillIds.Count) do
						local skillId;
						skillId = npc.AutoSkillIds[i + 1];
						local temp;
						temp = npc:GetSkillStateInfo():GetSkillInfoById(skillId);
						if (not isequal(nil, temp)) then 
							local dist;
							dist = temp.Distance;
							local absDist;
							absDist = UnityEngine.Mathf.Abs__Single((distToTarget - dist));
							if (diffDist > absDist) then 
								diffDist = absDist;
								targetSkillInfo = temp;
							end;
						end;
						i = (i + 1);
					end;
					if (not isequal(nil, targetSkillInfo)) then 
						this.m_Proxy.Value = callexternstaticreturnstruct(BoxedValue, "FromObject", targetSkillInfo);
					else
						this.m_Proxy.Value = callexternstaticreturnstruct(BoxedValue, "FromObject", maxSkillInfo);
					end;
					return;
				end;
			end;
		end;
		this.m_Proxy.Value = getexternstaticstructmember(SymbolKind.Property, BoxedValue, "NullObject");
	end,

	ctor = function(this)
		AiSelectSkillByDistance.__ctor(this);
	end,

	__ctor = function(this)
		if this.__ctor_called then 
			return;
		else
			this.__ctor_called = true;
		end;
	end,
	-------------------------------
	------ instance fields -------
	-------------------------------
	__init_obj_fields = function(this)
		rawset(this, "__ctor_called", false);
	end,

	-------------------------------
	--- define class and object ---
	-------------------------------
	__define_class = function()
		Utility.Warn("AiSelectSkillByDistance::__define_class begin");

		local class = AiSelectSkillByDistance;
		local obj_methods = {
			SetProxy = rawget(class, "SetProxy"),
			Clone = rawget(class, "Clone"),
			Evaluate = rawget(class, "Evaluate"),
			ctor = rawget(class, "ctor"),
			__ctor = rawget(class, "__ctor"),
		};
		local tmp_obj_method = nil;

		local __defineclass_return = defineclass(nil, "AiSelectSkillByDistance", "AiSelectSkillByDistance", class, obj_methods, false, false);
		Utility.Warn("AiSelectSkillByDistance::__define_class end");
		return __defineclass_return;
	end,

	-------------------------------
	--------- fields info ---------
	-------------------------------
	__class_fields = {
		__cctor_called = true,
	},

	__obj_fields = {
		m_Proxy = true,
		__ctor_called = true,
	},

	-------------------------------
	-------- metadata info --------
	-------------------------------
	__interfaces = {
		"GameFramework.Plugin.ISimpleStoryValuePlugin",
	},
	__method_info = {
		ctor = {
			ctor = true,
		},
	},
};


require "cs2lua__syslib";
require "cs2lua__externenums";
require "cs2lua__interfaces";
settempmetatable(AiSelectSkillByDistance);
