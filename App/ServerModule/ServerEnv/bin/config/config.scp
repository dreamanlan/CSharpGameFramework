stateTable=createTxtTable("./config/StateList.txt");
cfgTable=createConfigTable("./config/ServerConfigList.txt");
logFile=("./log/config_"+serverType+"_"+getLogFileId()+".log");
stateName="";

firstNodeJsId = 4;
firstRoomServerId = 20;
gmPortalId = 11;

function(log)
{
	print(""+$0);
	writeString(logFile,""+$0);
};

function(setState)
{
	stateName=$0;
	log("状态名："+$0);
};

function(handleIni)
{
	@iniFile = $0;
	@stateIni=createIniReader(@iniFile);
	@num=@stateIni.getInfoCount();
	for(@ix=0;@ix<@num;++@ix)
	{
		@section=@stateIni.getSection(@ix);
		@key=@stateIni.getKey(@ix);
		@value=@stateIni.getValue(@ix);
		if(@section!=""){
			stringMap.insert(@section+"$$"+@key,@value);
		}else{
			stringMap.insert(@key,@value);
		};
	};	
};

function(handleState)
{
	if(stateName!="")
	{
		@rIndex=stateTable.findRow(2,0,stateName);
		if(@rIndex>=2)
		{
			@colNum=stateTable.getColumnCount();
			for(@i=1;@i<@colNum;++@i)
			{
				@stateFile=stateTable.getCell(@rIndex,@i);
				if(@stateFile!="")
				{
					log("处理状态文件："+@stateFile);
					handleIni(@stateFile);
				};
			};
		};
	};
};

function(main)
{
	stringMap.initMap(1000);
	@ip0=readString("./etc/ip.txt",0);
	if(@ip0=="")
	{
		log("找不到当前机器IP！");		
	};
	log("当前机器外网IP："+@ip0);
	
	@rIndex=cfgTable.findByIP0(0,@ip0);
	if(@rIndex>=0)
	{
		log("当前机器配置行:"+@rIndex);
	}
	else
	{
		log("找不到当前机器配置！");
		return 0;
	};
	@sname=cfgTable.getServerName(@rIndex);
	log("当前SERVER名："+@sname);
	@sid=cfgTable.getServerID(@rIndex);
	@zid=cfgTable.getZoneID(@rIndex);
	@bid=cfgTable.getBigworldID(@rIndex);
	@wid=cfgTable.getWorldID(@rIndex);
	log("当前机器信息：[serverid,zoneid,bigworldid,worldid]:"+@sid+","+@zid+","+@bid+","+@wid);
	stringMap.insert("worldid",""+@wid);	
	//公共配置项（center ip/center port）
	@rIndex=cfgTable.findByID(0,@zid,@bid,@bid,0);
	if(@rIndex>=0)
	{
			log("bigworld center机器配置行:"+@rIndex);
	}
	else
	{
		log("找不到bigworld center机器配置！");
		return 0;
	};
	@bigworldip1 = cfgTable.getIP1(@rIndex);
	@bigworldport = cfgTable.getValueByKey(@rIndex,"端口");
	@rIndex=cfgTable.findByID(0,@zid,@bid,@wid,0);
	if(@rIndex>=0)
	{
			log("center机器配置行:"+@rIndex);
	}
	else
	{
		log("找不到center机器配置！");
		return 0;
	};
	@ip1 = cfgTable.getIP1(@rIndex);
	@port = cfgTable.getValueByKey(@rIndex,"端口");
	@rIndex=cfgTable.findByID(0,@zid,@bid,@bid,gmPortalId);
	if(@rIndex>0){
	  @gmIp = cfgTable.getIP0(@rIndex);
	  if(serverType=="nodejs"){
	    stringMap.insert("voiceip",@gmIp);
	    log("voiceip:"+@gmIp);
	  };
	};	
	if(serverType=="center"){
		stringMap.insert("ip","0.0.0.0");
		if(argv(0)=="bigworld"){
			stringMap.insert("port",@bigworldport);
			log("i'm bigworld, center port:"+@bigworldport);
		}else{
			stringMap.insert("port",@port);
			log("center port:"+@port);
		};
	}elseif(serverType=="lobby" || serverType=="roomserver"){
		stringMap.insert("ip",@bigworldip1);
		stringMap.insert("port",@bigworldport);
		log("center ip/port:"+@bigworldip1+"/"+@bigworldport);
	}else{
		stringMap.insert("ip",@ip1);
		stringMap.insert("port",@port);
		log("center ip/port:"+@ip1+"/"+@port);
	};
	//不同类型Server的配置（name/listen ip/listen port）
	if(serverType=="center"){
	  stringMap.insert("name","Center");
	}elseif(serverType=="lobby"){
	  stringMap.insert("name","Lobby");
	}elseif(serverType=="userserver"){
	  stringMap.insert("name","UserSvr");
	}elseif(serverType=="datacache"){
	  stringMap.insert("name","DataCache");
	}elseif(serverType=="nodejs"){
	  @sid = toint(argv(1));
	  if(@sid>=firstNodeJsId && @sid<firstRoomServerId){
	    stringMap.insert("name","NodeJs"+(@sid-firstNodeJsId+1));
	    stringMap.insert("nodejsport",""+(@sid-firstNodeJsId+9001));
	  }else{
	    stringMap.insert("name","NodeJs1");
	    stringMap.insert("nodejsport","9001");
	  };
	}elseif(serverType=="roomserver"){
	  @portSid = toint(argv(0));
	  if(@sid<firstRoomServerId){
	    @sid = firstRoomServerId;
	  };
	  if(@portSid>=firstRoomServerId){
	    stringMap.insert("name","RoomSvr"+(@sid-firstRoomServerId+@portSid-firstRoomServerId+1));
		  stringMap.insert("ServerPort",""+(@portSid-firstRoomServerId+9521));
	  }else{
	    stringMap.insert("name","RoomSvr1");
    	if(@bid==@wid){
  		  stringMap.insert("ServerPort","9529");
    	}else{
  		  stringMap.insert("ServerPort","9528");
  		};
	  };
		stringMap.insert("ServerIp",@ip0);
	};
	log("serverType:"+serverType);
			
	//加载对应类型服务器的ini文件配置
	handleIni("./config/DiffConf/"+serverType+".ini");
	
	//lobby特定的配置表配置信息
	@rIndex=cfgTable.findByID(0,@zid,@bid,@bid,1);
	if(@rIndex>=0)
	{
			log("lobby机器配置行:"+@rIndex);
	}
	else
	{
		log("找不到lobby机器配置！");
		return 0;
	};
	if(serverType=="lobby"){
  	@startServerTime=cfgTable.getValueByKey(@rIndex,"开服时间");
	  stringMap.insert("StartServerTime",@startServerTime);
  	@logVer=cfgTable.getValueByKey(@rIndex,"日志版本");
	  stringMap.insert("LogNormVersion",@logVer);
  	@shopMask=cfgTable.getValueByKey(@rIndex,"商店掩码");
	  stringMap.insert("shopmask",@shopMask);
	};	
	//userserver特定的配置表配置信息
	@rIndex=cfgTable.findByID(0,@zid,@bid,@wid,2);
	if(@rIndex>=0)
	{
			log("userserver机器配置行:"+@rIndex);
	}
	else
	{
		log("找不到userserver机器配置！");
		return 0;
	};
	log("serverType:"+serverType);
	if(serverType=="userserver"){
  	@startServerTime=cfgTable.getValueByKey(@rIndex,"开服时间");
	  stringMap.insert("StartServerTime",@startServerTime);
  	@logVer=cfgTable.getValueByKey(@rIndex,"日志版本");
	  stringMap.insert("LogNormVersion",@logVer);
  	@shopMask=cfgTable.getValueByKey(@rIndex,"商店掩码");
	  stringMap.insert("shopmask",@shopMask);	 	  
	  
    stringMap.insert("centernum","2");
    stringMap.insert("ip0",@ip1);
    stringMap.insert("port0",@port);
    stringMap.insert("worldid0",""+@wid);
    stringMap.insert("name0","UserSvr");
    stringMap.insert("ip1",@bigworldip1);
    stringMap.insert("port1",@bigworldport);
    stringMap.insert("worldid1",""+@bid);
    stringMap.insert("name1","UserSvr"+@wid);
	};
	//node用到的userserver配置行上的信息
	if(serverType=="nodejs"){
  	@clientLog=cfgTable.getValueByKey(@rIndex,"客户端日志");
	  stringMap.insert("enableclientlog",@clientLog);
  	@shopMask=cfgTable.getValueByKey(@rIndex,"商店掩码");
	  stringMap.insert("shopmask",@shopMask);
	};
	//datacache特定的配置表配置信息
	if(serverType=="datacache"){	  
  	@rIndex=cfgTable.findByID(0,@zid,@bid,@wid,3);
  	if(@rIndex>=0)
  	{
  			log("datacache机器配置行:"+@rIndex);
  	}
  	else
  	{
  		log("找不到datacache机器配置！");
  		return 0;
  	};
  	@dbIp = cfgTable.getValueByKey(@rIndex,"DB");
		stringMap.insert("Server",@dbIp);
	};
  
	stateName=cfgTable.getValueByKey(@rIndex,"状态");
	
	handleState();
	
	/*
	if(serverType=="datacache"){
	  @db = stringMap.find("Database");
	  stringMap.insert("Database",@db+"_"+@wid);
	};
	*/
	
	log("配置项处理完成：");
	stringMap.listMap(logFile);
	return 1;
};

return main();
